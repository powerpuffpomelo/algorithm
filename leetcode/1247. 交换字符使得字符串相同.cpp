// ###################################################### 版本1 ###################################################### //
/*
s1和s2不同的位置，要么在s1中是x在s2中是y（这种情况个数记为a），要么在s2中是x在s1中是y（这种情况个数记为b)。
如果a+b为奇数，即x（或者y）的数量为奇数，则无法分配使得s1和s2的x或y数量相同，无解；所以a+b需要是偶数才有解
x x y y y y
y y x x x x
如果a+b是偶数，比如上边这个例子，把s1的第一个x和s2的第二个y互换，即可让a-=2
如果是把s1的第一个x和s2的第一个y互换（相同位置互换），则a--,b++
所以，如果a和b都是偶数，答案为(a + b) / 2
如果a和b都是奇数，则先相同位置互换（需一步操作），让a和b都变成偶数，因此答案为(a + b) / 2 + 1
*/
class Solution {
public:
    int minimumSwap(string s1, string s2) {
        int a = 0, b = 0;
        for(int i = 0; i < s1.size(); i++){
            if(s1[i] != s2[i]){
                if(s1[i] == 'x') a++;
                else b++;
            }
        }
        if((a + b) % 2) return -1;
        if(a % 2) return (a + b) / 2 + 1;
        else return (a + b) / 2;
    }
};